generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  nickname  String @unique
  password  String
  createdAt DateTime @default(now())
  
  groups    UserGroup[]
  guesses   Guess[] 
  createdGroups Group[]
}

model Group {
  id        String @id @default(uuid())
  name      String
  isPublic  Boolean @default(true)
  createdBy String
  creator   User   @relation(fields: [createdBy], references: [id]) // Relação unidirecional
  createdAt DateTime @default(now())

  @@unique([name, createdBy])

  members UserGroup[]
}

model UserGroup {
  userId  String
  groupId String

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([userId, groupId]) // Define uma chave composta
}


model Match {
  id        String @id @default(uuid())
  homeTeam  String
  awayTeam  String
  date      DateTime

  guesses   Guess[]
}

model Guess {
  id        String @id @default(uuid())
  userId    String
  matchId   String
  scoreHome Int
  scoreAway Int
  
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  match     Match @relation(fields: [matchId], references: [id], onDelete: Cascade)
}


